{
    "name": "prettier-eslint-vscode",
    "displayName": "Prettier - ESLint",
    "description": "Code extensions to format your JavaScript using Prettier and ESLint (with eslint --fix)",
    "version": "0.7.1",
    "publisher": "RobinMalfait",
    "icon": "prettier-logo.png",
    "homepage": "https://marketplace.visualstudio.com/items?itemName=RobinMalfait.prettier-eslint-vscode",
    "repository": {
        "type": "git",
        "url": "http://github.com/RobinMalfait/prettier-eslint-code.git"
    },
    "license": "MIT",
    "bugs": {
        "url": "http://github.com/RobinMalfait/prettier-eslint-code/issues"
    },
    "engines": {
        "vscode": "^1.5.0"
    },
    "categories": [
        "Formatters"
    ],
    "activationEvents": [
        "onCommand:prettier-eslint.format",
        "prettier-eslint.open-output",
        "workspaceContains:.eslintrc",
        "workspaceContains:.eslintrc.js",
        "workspaceContains:.eslintrc.json",
        "workspaceContains:.eslintrc.yaml",
        "workspaceContains:.eslintrc.yml",
        "onLanguage:javascript",
        "onLanguage:javascriptreact"
    ],
    "main": "./out/src/extension",
    "contributes": {
        "commands": [
            {
                "command": "prettier-eslint.format",
                "title": "Prettier ESLint: format"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "Prettier-eslint",
            "properties": {
                "prettier.useTabs": {
                    "type": "boolean",
                    "default": false,
                    "description": "Indent lines with tabs"
                },
                "prettier.printWidth": {
                    "type": "integer",
                    "default": 80,
                    "description": "Fit code within this line limit"
                },
                "prettier.tabWidth": {
                    "type": "integer",
                    "default": 2,
                    "description": "Number of spaces it should use per tab"
                },
                "prettier.singleQuote": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, will use single instead of double quotes"
                },
                "prettier.trailingComma": {
                    "type": "string",
                    "default": "none",
                    "enum": [
                        "none",
                        "es5",
                        "all"
                    ],
                    "description": "Controls the printing of trailing commas wherever possible. Valid options:\n\"none\" - No trailing commas\n\"es5\"  - Trailing commas where valid in ES5 (objects, arrays, etc)\n\"all\"  - Trailing commas wherever possible (function arguments)"
                },
                "prettier.bracketSpacing": {
                    "type": "boolean",
                    "default": true,
                    "description": "Controls the printing of spaces inside object literals"
                },
                "prettier.jsxBracketSameLine": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, puts the `>` of a multi-line jsx element at the end of\nthe last line instead of being alone on the next line"
                },
                "prettier.parser": {
                    "type": "string",
                    "default": "babylon",
                    "enum": [
                        "babylon",
                        "flow"
                    ],
                    "description": "Which parser to use. Valid options are 'flow' and 'babylon'"
                },
                "prettier.semi": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to add a semicolon at the end of every line (semi: true),\nor only at the beginning of lines that may introduce ASI failures (semi: false)"
                },
                "prettier-eslint.eslintPath": {
                    "type": "string",
                    "default": "",
                    "description": "An optional path to eslint, otherwise it will try to guess the path."
                },
                "prettier-eslint.prettierPath": {
                    "type": "string",
                    "default": "",
                    "description": "An optional path to prettier, otherwise it will try to guess the path."
                }
            }
        },
        "keybindings": [
            {
                "command": "prettier-eslint.format",
                "key": "Cmd+Alt+P"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "tsc -p ./",
        "compile": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "node ./node_modules/vscode/bin/test"
    },
    "devDependencies": {
        "@types/mocha": "^2.2.40",
        "@types/node": "^6.0.68",
        "mocha": "^2.5.3",
        "typescript": "^2.2.2",
        "vscode": "^1.1.0"
    },
    "dependencies": {
        "prettier-eslint": "^5.1.0",
        "require-relative": "^0.8.7"
    }
}